
name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci
        
      - name: Compile TypeScript files for Electron
        run: npx tsc -p tsconfig.electron.json

      - name: Build Vite project
        run: npm run build

      - name: Build Electron app
        run: |
          if [ "${{ matrix.os }}" = "macos-latest" ]; then
            node scripts/build-electron.cjs mac
          elif [ "${{ matrix.os }}" = "windows-latest" ]; then
            node scripts/build-electron.cjs win
          else
            node scripts/build-electron.cjs linux
          fi
        shell: bash

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.os }}-builds
          path: |
            release/*.exe
            release/*.dmg
            release/*.AppImage
            release/*.deb
            release/*.rpm
          if-no-files-found: ignore

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: release-files

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: release-files/**/*
          draft: false
          prerelease: false
          generate_release_notes: true
